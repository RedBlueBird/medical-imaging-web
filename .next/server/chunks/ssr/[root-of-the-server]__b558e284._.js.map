{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jiefu/Documents/WebProjects/medical-imaging-web/src/context/ThemeContext.tsx"],"sourcesContent":["// src/context/ThemeContext.tsx\r\n'use client'\r\nimport React, { createContext, useState, useEffect, useContext, ReactNode } from 'react';\r\n\r\ntype Theme = 'light' | 'dark';\r\n\r\ninterface ThemeContextType {\r\n  theme: Theme;\r\n  toggleTheme: () => void;\r\n  setTheme: (theme: Theme) => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\r\n  const [theme, setTheme] = useState<Theme>('dark'); // Default to dark for sci-fi theme\r\n  \r\n  // Initialize theme on mount\r\n  useEffect(() => {\r\n    // Check localStorage first\r\n    const savedTheme = localStorage.getItem('theme') as Theme | null;\r\n    \r\n    if (savedTheme === 'dark' || savedTheme === 'light') {\r\n      setTheme(savedTheme);\r\n    } else {\r\n      // Default to dark theme for sci-fi aesthetic\r\n      setTheme('dark');\r\n    }\r\n  }, []);\r\n\r\n  // Update document with theme class whenever theme changes\r\n  useEffect(() => {\r\n    if (theme === 'dark') {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n    \r\n    // Save to localStorage\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  // Toggle between light and dark\r\n  const toggleTheme = () => {\r\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  const value = {\r\n    theme,\r\n    toggleTheme,\r\n    setTheme: (newTheme: Theme) => setTheme(newTheme)\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = (): ThemeContextType => {\r\n  const context = useContext(ThemeContext);\r\n  \r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  \r\n  return context;\r\n};"],"names":[],"mappings":"AAAA,+BAA+B;;;;;;AAE/B;AADA;;;AAWA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAA2B;IACjE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,SAAS,mCAAmC;IAEtF,4BAA4B;IAC5B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,2BAA2B;QAC3B,MAAM,aAAa,aAAa,OAAO,CAAC;QAExC,IAAI,eAAe,UAAU,eAAe,SAAS;YACnD,SAAS;QACX,OAAO;YACL,6CAA6C;YAC7C,SAAS;QACX;IACF,GAAG,EAAE;IAEL,0DAA0D;IAC1D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,UAAU,QAAQ;YACpB,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC,OAAO;YACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;QAC5C;QAEA,uBAAuB;QACvB,aAAa,OAAO,CAAC,SAAS;IAChC,GAAG;QAAC;KAAM;IAEV,gCAAgC;IAChC,MAAM,cAAc;QAClB,SAAS,CAAA,OAAQ,SAAS,UAAU,SAAS;IAC/C;IAEA,MAAM,QAAQ;QACZ;QACA;QACA,UAAU,CAAC,WAAoB,SAAS;IAC1C;IAEA,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;kBAC3B;;;;;;AAGP;AAEO,MAAM,WAAW;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAE3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jiefu/Documents/WebProjects/medical-imaging-web/src/config/colors.tsx"],"sourcesContent":["// src/config/colors.ts\r\nimport { useTheme } from '@/context/ThemeContext';\r\n\r\n// Define sci-fi color palette interface\r\ninterface SciFiColorPalette {\r\n  // Background\r\n  bgPrimary: string;\r\n  bgSecondary: string;\r\n  bgTertiary: string;\r\n  \r\n  // Text\r\n  textPrimary: string;\r\n  textSecondary: string;\r\n  textLight: string;\r\n  accent: string;\r\n  \r\n  // Glass morphism\r\n  glassOverlay: string;\r\n  glassHover: string;\r\n  glassBorder: string;\r\n  \r\n  // Buttons\r\n  buttonPrimary: string;\r\n  buttonGhost: string;\r\n  buttonHover: string;\r\n  \r\n  // Effects\r\n  shadow: string;\r\n  glow: string;\r\n  \r\n  // Interactive\r\n  linkHover: string;\r\n  borderAccent: string;\r\n}\r\n\r\n// Light theme colors (sci-fi blue variant)\r\nconst lightColors: SciFiColorPalette = {\r\n  // Background\r\n  bgPrimary: 'bg-gradient-to-br from-blue-50 to-indigo-100',\r\n  bgSecondary: 'bg-white/80',\r\n  bgTertiary: 'bg-blue-50/50',\r\n  \r\n  // Text\r\n  textPrimary: 'text-gray-900',\r\n  textSecondary: 'text-gray-600',\r\n  textLight: 'text-white',\r\n  accent: 'text-blue-600',\r\n  \r\n  // Glass morphism\r\n  glassOverlay: 'bg-white/20 backdrop-blur-md',\r\n  glassHover: 'hover:bg-white/30',\r\n  glassBorder: 'border-white/30',\r\n  \r\n  // Buttons\r\n  buttonPrimary: 'bg-blue-600 hover:bg-blue-700',\r\n  buttonGhost: 'bg-white/10 hover:bg-white/20 backdrop-blur-sm',\r\n  buttonHover: 'hover:bg-blue-700',\r\n  \r\n  // Effects\r\n  shadow: 'shadow-xl shadow-blue-500/20',\r\n  glow: 'shadow-lg shadow-blue-400/30',\r\n  \r\n  // Interactive\r\n  linkHover: 'hover:text-blue-600',\r\n  borderAccent: 'border-blue-500/50',\r\n};\r\n\r\n// Dark theme colors (primary sci-fi theme)\r\nconst darkColors: SciFiColorPalette = {\r\n  // Background\r\n  bgPrimary: 'bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900',\r\n  bgSecondary: 'bg-slate-800/80',\r\n  bgTertiary: 'bg-slate-700/50',\r\n  \r\n  // Text\r\n  textPrimary: 'text-white',\r\n  textSecondary: 'text-blue-200',\r\n  textLight: 'text-white',\r\n  accent: 'text-blue-400',\r\n  \r\n  // Glass morphism\r\n  glassOverlay: 'bg-white/10 backdrop-blur-md',\r\n  glassHover: 'hover:bg-white/20',\r\n  glassBorder: 'border-white/20',\r\n  \r\n  // Buttons\r\n  buttonPrimary: 'bg-blue-600 hover:bg-blue-500',\r\n  buttonGhost: 'bg-white/10 hover:bg-white/20 backdrop-blur-sm',\r\n  buttonHover: 'hover:bg-blue-500',\r\n  \r\n  // Effects\r\n  shadow: 'shadow-xl shadow-blue-500/30',\r\n  glow: 'shadow-lg shadow-blue-400/40',\r\n  \r\n  // Interactive\r\n  linkHover: 'hover:text-blue-400',\r\n  borderAccent: 'border-blue-500/50',\r\n};\r\n\r\n// Custom hook that provides the color palette based on current theme\r\nexport const useColors = (): SciFiColorPalette => {\r\n  const { theme } = useTheme();\r\n  return theme === 'dark' ? darkColors : lightColors;\r\n};\r\n\r\n// Helper function to get specific colors without the hook (for static contexts)\r\nexport const getColors = (theme: 'light' | 'dark'): SciFiColorPalette => {\r\n  return theme === 'dark' ? darkColors : lightColors;\r\n};"],"names":[],"mappings":"AAAA,uBAAuB;;;;;AACvB;;AAkCA,2CAA2C;AAC3C,MAAM,cAAiC;IACrC,aAAa;IACb,WAAW;IACX,aAAa;IACb,YAAY;IAEZ,OAAO;IACP,aAAa;IACb,eAAe;IACf,WAAW;IACX,QAAQ;IAER,iBAAiB;IACjB,cAAc;IACd,YAAY;IACZ,aAAa;IAEb,UAAU;IACV,eAAe;IACf,aAAa;IACb,aAAa;IAEb,UAAU;IACV,QAAQ;IACR,MAAM;IAEN,cAAc;IACd,WAAW;IACX,cAAc;AAChB;AAEA,2CAA2C;AAC3C,MAAM,aAAgC;IACpC,aAAa;IACb,WAAW;IACX,aAAa;IACb,YAAY;IAEZ,OAAO;IACP,aAAa;IACb,eAAe;IACf,WAAW;IACX,QAAQ;IAER,iBAAiB;IACjB,cAAc;IACd,YAAY;IACZ,aAAa;IAEb,UAAU;IACV,eAAe;IACf,aAAa;IACb,aAAa;IAEb,UAAU;IACV,QAAQ;IACR,MAAM;IAEN,cAAc;IACd,WAAW;IACX,cAAc;AAChB;AAGO,MAAM,YAAY;IACvB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IACzB,OAAO,UAAU,SAAS,aAAa;AACzC;AAGO,MAAM,YAAY,CAAC;IACxB,OAAO,UAAU,SAAS,aAAa;AACzC","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jiefu/Documents/WebProjects/medical-imaging-web/src/components/ThemeToggle.tsx"],"sourcesContent":["// src/components/ThemeToggle.tsx\r\n'use client'\r\nimport React from 'react';\r\nimport { Moon, Sun } from 'lucide-react';\r\nimport { useTheme } from '@/context/ThemeContext';\r\nimport { useColors } from '@/config/colors';\r\n\r\nconst ThemeToggle: React.FC = () => {\r\n  const { theme, toggleTheme } = useTheme();\r\n  const colors = useColors();\r\n  \r\n  return (\r\n    <button \r\n      onClick={toggleTheme}\r\n      className={`p-2 rounded-lg ${colors.buttonGhost} border ${colors.glassBorder} transition-all duration-200 hover:scale-105`}\r\n      aria-label={`Switch to ${theme === 'light' ? 'dark' : 'light'} mode`}\r\n    >\r\n      {theme === 'light' ? (\r\n        <Moon className=\"w-5 h-5 text-current\" />\r\n      ) : (\r\n        <Sun className=\"w-5 h-5 text-current\" />\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAGjC;AAAA;AACA;AACA;AAJA;;;;;AAMA,MAAM,cAAwB;IAC5B,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IACtC,MAAM,SAAS,CAAA,GAAA,wHAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,8OAAC;QACC,SAAS;QACT,WAAW,CAAC,eAAe,EAAE,OAAO,WAAW,CAAC,QAAQ,EAAE,OAAO,WAAW,CAAC,4CAA4C,CAAC;QAC1H,cAAY,CAAC,UAAU,EAAE,UAAU,UAAU,SAAS,QAAQ,KAAK,CAAC;kBAEnE,UAAU,wBACT,8OAAC,kMAAA,CAAA,OAAI;YAAC,WAAU;;;;;iCAEhB,8OAAC,gMAAA,CAAA,MAAG;YAAC,WAAU;;;;;;;;;;;AAIvB;uCAEe","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jiefu/Documents/WebProjects/medical-imaging-web/src/components/Header.tsx"],"sourcesContent":["// src/components/Header.tsx\r\n'use client'\r\nimport React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { Menu, X } from 'lucide-react';\r\nimport { useColors } from '@/config/colors';\r\nimport ThemeToggle from './ThemeToggle';\r\n\r\nconst Header: React.FC = () => {\r\n  const colors = useColors();\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n  \r\n  const navItems = [\r\n    { path: '/#features', label: 'Features' },\r\n    { path: '/#about', label: 'About' },\r\n    { path: '/#contact', label: 'Contact' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setIsScrolled(window.scrollY > 50);\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  const toggleMobileMenu = () => {\r\n    setMobileMenuOpen(!mobileMenuOpen);\r\n  };\r\n\r\n  return (\r\n    <header className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${\r\n      isScrolled ? 'backdrop-blur-md' : ''\r\n    }`}>\r\n      <div className={`${colors.glassOverlay} border-b ${colors.glassBorder}`}>\r\n        <div className=\"container mx-auto px-4 py-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            {/* Logo */}\r\n            <Link href=\"/\" className=\"flex items-center gap-2 group\">\r\n              {/* <div className=\"w-10 h-10 bg-blue-500 rounded-lg transition-transform duration-300 group-hover:scale-110\">\r\n              </div> */}\r\n              <span className={`text-xl font-bold ${colors.textPrimary} transition-colors ml-6`}>\r\n                AI医学影像综合检测平台\r\n              </span>\r\n            </Link>\r\n            \r\n            {/* Desktop Navigation - Right Aligned */}\r\n            <div className=\"hidden md:flex items-center gap-8\">\r\n              {/* <nav className=\"flex items-center gap-8\">\r\n                {navItems.map((item) => (\r\n                  <a \r\n                    key={item.path}\r\n                    href={item.path} \r\n                    className={`${colors.textSecondary} ${colors.linkHover} transition-colors duration-300 hover:scale-105 transform`}\r\n                  >\r\n                    {item.label}\r\n                  </a>\r\n                ))}\r\n              </nav> */}\r\n              \r\n              <ThemeToggle />\r\n            </div>\r\n            \r\n            {/* Mobile Menu Button */}\r\n            <div className=\"flex items-center gap-4 md:hidden\">\r\n              <ThemeToggle />\r\n              \r\n              <button\r\n                onClick={toggleMobileMenu}\r\n                className={`p-2 rounded-lg ${colors.buttonGhost} border ${colors.glassBorder} transition-all duration-200`}\r\n              >\r\n                {mobileMenuOpen ? (\r\n                  <X className=\"w-5 h-5\" />\r\n                ) : (\r\n                  <Menu className=\"w-5 h-5\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Mobile Menu */}\r\n        {/* {mobileMenuOpen && (\r\n          <div className={`md:hidden ${colors.glassOverlay} border-t ${colors.glassBorder}`}>\r\n            <div className=\"container mx-auto px-4 py-4\">\r\n              <nav className=\"flex flex-col gap-4\">\r\n                {navItems.map((item) => (\r\n                  <a \r\n                    key={item.path}\r\n                    href={item.path} \r\n                    className={`${colors.textSecondary} ${colors.linkHover} transition-colors duration-300 py-2`}\r\n                    onClick={() => setMobileMenuOpen(false)}\r\n                  >\r\n                    {item.label}\r\n                  </a>\r\n                ))}\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAE5B;AACA;AACA;AAAA;AACA;AACA;AALA;;;;;;;AAOA,MAAM,SAAmB;IACvB,MAAM,SAAS,CAAA,GAAA,wHAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,WAAW;QACf;YAAE,MAAM;YAAc,OAAO;QAAW;QACxC;YAAE,MAAM;YAAW,OAAO;QAAQ;QAClC;YAAE,MAAM;YAAa,OAAO;QAAU;KACvC;IAED,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,cAAc,OAAO,OAAO,GAAG;QACjC;QAEA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG,EAAE;IAEL,MAAM,mBAAmB;QACvB,kBAAkB,CAAC;IACrB;IAEA,qBACE,8OAAC;QAAO,WAAW,CAAC,4DAA4D,EAC9E,aAAa,qBAAqB,IAClC;kBACA,cAAA,8OAAC;YAAI,WAAW,GAAG,OAAO,YAAY,CAAC,UAAU,EAAE,OAAO,WAAW,EAAE;sBACrE,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCAGvB,cAAA,8OAAC;gCAAK,WAAW,CAAC,kBAAkB,EAAE,OAAO,WAAW,CAAC,uBAAuB,CAAC;0CAAE;;;;;;;;;;;sCAMrF,8OAAC;4BAAI,WAAU;sCAab,cAAA,8OAAC,iIAAA,CAAA,UAAW;;;;;;;;;;sCAId,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,iIAAA,CAAA,UAAW;;;;;8CAEZ,8OAAC;oCACC,SAAS;oCACT,WAAW,CAAC,eAAe,EAAE,OAAO,WAAW,CAAC,QAAQ,EAAE,OAAO,WAAW,CAAC,4BAA4B,CAAC;8CAEzG,+BACC,8OAAC,4LAAA,CAAA,IAAC;wCAAC,WAAU;;;;;6DAEb,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BlC;uCAEe","debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jiefu/Documents/WebProjects/medical-imaging-web/src/components/ClientLayout.tsx"],"sourcesContent":["// src/components/ClientLayout.tsx\r\n'use client';\r\n\r\nimport Header from \"@/components/Header\";\r\nimport Footer from \"@/components/Footer\";\r\nimport { useColors } from \"@/config/colors\";\r\n\r\nexport default function ClientLayout({ children }: { children: React.ReactNode }) {\r\n  const colors = useColors();\r\n  \r\n  return (\r\n    <div className={`${colors.bgPrimary} min-h-screen flex flex-col`}>\r\n      <Header />\r\n      {children}\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,kCAAkC;;;;;AAGlC;AAEA;AAJA;;;;AAMe,SAAS,aAAa,EAAE,QAAQ,EAAiC;IAC9E,MAAM,SAAS,CAAA,GAAA,wHAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,8OAAC;QAAI,WAAW,GAAG,OAAO,SAAS,CAAC,2BAA2B,CAAC;;0BAC9D,8OAAC,4HAAA,CAAA,UAAM;;;;;YACN;;;;;;;AAIP","debugId":null}}]
}